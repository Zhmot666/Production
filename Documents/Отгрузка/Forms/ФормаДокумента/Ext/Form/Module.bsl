
#Область ОбработчикиКомандФормы

&НаСервере
Функция ЗаполнениеЗаявок(ДатаОтгрузки)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаОстатки.Контрагенты КАК Контрагенты,
	|	ЗаявкаОстатки.Номенклатура КАК Номенклатура,
	|	ЗаявкаОстатки.ПунктыРазгрузки КАК ПунктыРазгрузки,
	|	ЗаявкаОстатки.ЗаказаноОстаток КАК ЗаказаноОстаток,
	|	ЗаявкаОстатки.ДокументЗаявки КАК Документ,
	|	ЗаявкаОстатки.ДокументЗаявки.СпособПодбораПартии КАК СпособПодбора
	|ИЗ
	|	РегистрНакопления.Заявка.Остатки(&ДатаОтгрузки, ) КАК ЗаявкаОстатки";
	
	Запрос.УстановитьПараметр("ДатаОтгрузки", ДатаОтгрузки);
	
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Возврат ОбщегоНазначенияСервер.ТзВМассив(ТЗ);
	
КонецФункции // ЗаполнениеЗаявок()

&НаСервере
Функция ЗаполнениеОтгрузок(ДокЗап)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиОстатки.Склад КАК Склад,
	|	ОстаткиОстатки.НомерПартии КАК НомерПартии,
	|	ОстаткиОстатки.КоличествоОстаток КАК Остаток,
	|	ОстаткиОстатки.ДатаВыпуска КАК ДатаВыпуска
	|ИЗ
	|	РегистрНакопления.Остатки.Остатки(&ДатаОтгрузки, ) КАК ОстаткиОстатки
	|ГДЕ
	|	ОстаткиОстатки.Склад.ТипСклада = &ТипСклада";
	
	Запрос.УстановитьПараметр("ДатаОтгрузки", ДокЗап.Дата);
	Запрос.УстановитьПараметр("ТипСклада", Перечисления.ТипСклада.Продукция);
	
	ТЗОстатки = Запрос.Выполнить().Выгрузить();
	ТЗОстатки.Колонки.Добавить("Отгрузить");
	ТЗОстатки.ЗаполнитьЗначения(0, "Отгрузить");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтгрузкаЗаказы.ДокументЗаявки КАК ДокументЗаявки,
	|	ОтгрузкаЗаказы.Контрагент КАК Контрагенты,
	|	ОтгрузкаЗаказы.ПунктРазгрузки КАК ПунктыРазгрузки,
	|	ОтгрузкаЗаказы.Номенклатура КАК Номенклатура,
	|	ОтгрузкаЗаказы.КоличествоЗаказа КАК КоличествоЗаказа,
	|	ОтгрузкаЗаказы.КоличествоОтгрузки КАК Остаток,
	|	ОтгрузкаЗаказы.ВключатьВОтгрузку КАК ВключатьВОтгрузку,
	|	ОтгрузкаЗаказы.Ссылка КАК Ссылка,
	|	ОтгрузкаЗаказы.ДокументЗаявки.СпособПодбораПартии КАК СпособПодбора
	|ИЗ
	|	Документ.Отгрузка.Заказы КАК ОтгрузкаЗаказы
	|ГДЕ
	|	ОтгрузкаЗаказы.ВключатьВОтгрузку = 1
	|	И ОтгрузкаЗаказы.Ссылка = &ДокЗап";
	
	Запрос.УстановитьПараметр("ДокЗап", ДокЗап);
	
	ТЗЗаявки = Запрос.Выполнить().Выгрузить();
	ТЗЗаявки.Колонки.Добавить("НомерПартии");
	ТЗЗаявки.ЗаполнитьЗначения("", "НомерПартии");
	ТЗЗаявки.Колонки.Добавить("Отгрузить");
	ТЗЗаявки.ЗаполнитьЗначения(0, "Отгрузить");
	
	ТЗЗаявки.Сортировать("СпособПодбора Убыв, Остаток Убыв");
	ТЗОстатки.Сортировать("ДатаВыпуска Возр,  Остаток Возр");
	
	Массив = Новый Массив();
	
	Для Каждого СтрокаЗаявки Из ТЗЗаявки Цикл
		СтатусОтгрузки = "";
		Для Каждого СтрОст Из ТЗОстатки Цикл
			Если СтрокаЗаявки.СпособПодбора = ПредопределенноеЗначение("Перечисление.СпособПодбора.Целиком") Тогда
				Если СтатусОтгрузки = "" Тогда
					СтатусОтгрузки = "НетОстатка";
				КонецЕсли;
				Если СтрокаЗаявки.Номенклатура = СтрОст.Номенклатура И  СтрОст.Остаток > 0 Тогда
					СтатусОтгрузки = "НетПартии";
					Если СтрокаЗаявки.Остаток <= СтрОст.Остаток Тогда
						ЗаполнитьЭлементМассива(Массив, СтрокаЗаявки, СтрОст, 1);
						ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток = ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток - СтрокаЗаявки.Остаток;
						СтатусОтгрузки = "Полностью";
						Прервать;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если СтатусОтгрузки = "" Тогда
					СтатусОтгрузки = "НетОстатка";
				КонецЕсли;
				Если СтрокаЗаявки.Номенклатура = СтрОст.Номенклатура Тогда
					Если СтрокаЗаявки.Остаток <= СтрОст.Остаток Тогда
						ЗаполнитьЭлементМассива(Массив, СтрокаЗаявки, СтрОст, 1);
						ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток = ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток - СтрокаЗаявки.Остаток;
						Если СтатусОтгрузки = "" ИЛИ СтатусОтгрузки = "НетОстатка" Тогда
							СтатусОтгрузки = "Полностью";
						КонецЕсли;
						Прервать;
					ИначеЕсли СтрокаЗаявки.Остаток > СтрОст.Остаток И СтрОст.Остаток > 0 Тогда
						ЗаполнитьЭлементМассива(Массив, СтрокаЗаявки, СтрОст, 2);
						СтрокаЗаявки.Остаток = СтрокаЗаявки.Остаток - ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток;
						ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток = 0;
						СтатусОтгрузки = "Части";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если СтатусОтгрузки = "Полностью" Тогда 
			ТутНеДолжноБытьПусто = 1; // Переписать, вообще весь блок
		ИначеЕсли СтатусОтгрузки = "НетПартии" Тогда
			Сообщение = Новый СообщениеПользователю;
		 	Сообщение.Текст = СтрШаблон(НСтр("ru='%1 для %2 %3 не нашлось подходящей партии для полной отгрузки.'"), Строка(СтрокаЗаявки.Номенклатура), Строка(СтрокаЗаявки.Контрагенты), Строка(СтрокаЗаявки.ПунктыРазгрузки));
			Сообщение.Сообщить(); 
		ИначеЕсли СтатусОтгрузки = "НетОстатка" Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(НСтр("ru='%1 для %2 %3 нету на остатке.'"), Строка(СтрокаЗаявки.Номенклатура), Строка(СтрокаЗаявки.Контрагенты), Строка(СтрокаЗаявки.ПунктыРазгрузки));
			Сообщение.Сообщить(); 
		ИначеЕсли СтатусОтгрузки = "Части" Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(НСтр("ru='%1 для %2 %3 отгружено из разных партий.'"), Строка(СтрокаЗаявки.Номенклатура), Строка(СтрокаЗаявки.Контрагенты), Строка(СтрокаЗаявки.ПунктыРазгрузки));
			Сообщение.Сообщить(); 
		КонецЕсли;
	КонецЦикла;
	
	
	
	Возврат Массив;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьОтгрузки(Команда)
	ОчиститьСообщения();
	Результат = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьОтгрузкиЗавершение", ЭтотОбъект), НСтр("ru='Перед заполнением таблица ОТГРУЗОК документ будет записан, а таблица будет очищена. Уверены?'"),РежимДиалогаВопрос.ДаНет,,,"ВНИМАНИЕ");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОтгрузкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Результат = РезультатВопроса;
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат
	КонецЕсли;
	Объект.Отгрузки.Очистить();
	ЭтотОбъект.Записать();
	СтрокиЗаполнения = ЗаполнениеОтгрузок(Объект.Ссылка);
	
	Для Каждого СтрЗап Из СтрокиЗаполнения Цикл
		Если СтрЗап.Количество > 0 Тогда
			
			СтрДоб = Объект.Отгрузки.Добавить();
			СтрДоб.ДокументЗаявки = СтрЗап.ДокументЗаявки;
			СтрДоб.Контрагент = СтрЗап.Контрагент;
			СтрДоб.ПунктРазгрузки = СтрЗап.ПунктРазгрузки;
			СтрДоб.ДатаВыпуска = СтрЗап.ДатаВыпуска;
			СтрДоб.Номенклатура = СтрЗап.Номенклатура;
			СтрДоб.НомерПартии = СтрЗап.НомерПартии;
			СтрДоб.Склад = СтрЗап.Склад;
			СтрДоб.Количество = СтрЗап.Количество;
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = Строка(СтрЗап.Контрагенты) + " " + Строка(СтрЗап.ПунктыРазгрузки) + " с " + Строка(СтрЗап.Номенклатура) + " " + НСтр("ru='исключен из отгрузки'");
			Сообщение.Поле = "";
			Сообщение.УстановитьДанные(СтрЗап.Контрагенты);
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЦикла;
	Объект.Отгрузки.Сортировать("Контрагент, ПунктРазгрузки");

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаНакладных(Команда)
	Если Объект.Отгрузки.Количество() = 0 Тогда 
		ОчиститьСообщения();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Таблица выгрузок не заполнена, выгружать нечего'");
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли;
	
	Если Модифицированность = Истина ИЛИ Объект.Проведен = Ложь Тогда
		Результат = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ВыгрузкаНакладныхЗавершение", ЭтотОбъект), НСтр("ru='Перед выгрузкой следует провести документ. Сделаем?'"),РежимДиалогаВопрос.ДаНет,,,"ВНИМАНИЕ");
        Возврат;
	КонецЕсли;
	
	
	ВыгрузкаНакладныхФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаНакладныхЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Результат = РезультатВопроса;
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат
	КонецЕсли;
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	Записать(ПараметрыЗаписи);
	
	ВыгрузкаНакладныхФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаНакладныхФрагмент()
	
	Перем НовыйФайл, ПапкаВыгрузки, ТекущаяСтрока, ФайлВыгрузки;
	
	#Если НЕ МобильныйКлиент И НЕ МобильноеПриложениеСервер И НЕ МобильноеПриложениеКлиент И НЕ ВебКлиент Тогда
		НовыйФайл = Новый XBase;
		
		НовыйФайл.Кодировка = КодировкаXBase.ANSI;
		НовыйФайл.Поля.Добавить("NaimPok","S",60);
		НовыйФайл.Поля.Добавить("UNP", "N", 9);
		НовыйФайл.Поля.Добавить("Prod","S",100);
		НовыйФайл.Поля.Добавить("Kol", "N", 14,3);
		НовыйФайл.Поля.Добавить("Adr","S",100);
		НовыйФайл.Поля.Добавить("Part","S",3);
		
		ПапкаВыгрузки = "d:\ExportTTN\";
		ФайлВыгрузки = Формат(Объект.Дата, "ДФ=ггггММдд")+".dbf";
		НовыйФайл.СоздатьФайл(ПапкаВыгрузки+ФайлВыгрузки);
		НовыйФайл.Записать();
		
		Для Каждого ТекущаяСтрока Из Объект.Отгрузки Цикл
			НовыйФайл.Добавить();
			НовыйФайл.NaimPok = ТекущаяСтрока.Контрагент;
			НовыйФайл.UNP = ПолучитьУНП(ТекущаяСтрока.Контрагент);
			НовыйФайл.Prod = ТекущаяСтрока.Номенклатура;
			НовыйФайл.Kol = ТекущаяСтрока.Количество;
			НовыйФайл.Adr = ТекущаяСтрока.ПунктРазгрузки;
			НовыйФайл.Part = ТекущаяСтрока.НомерПартии;	
			
			НовыйФайл.Записать();
		КонецЦикла;
		
		НовыйФайл.ЗакрытьФайл();
		
		ОчиститьСообщения();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='ФАЙЛ ВЫГРУЖЕН'");
		Сообщение.Сообщить(); 
	#Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не работает на мобилке'");
		Сообщение.Сообщить(); 
		Возврат;
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаявки(Команда)
	ОчиститьСообщения();
	Результат = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗаявкиЗавершение", ЭтотОбъект), НСтр("ru='Перед заполнением таблица ЗАЯВОК будет очищена. Уверены?'"),РежимДиалогаВопрос.ДаНет,,,"ВНИМАНИЕ");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаявкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Результат = РезультатВопроса;
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат
	КонецЕсли;
	Объект.Заказы.Очистить();
	СтрокиЗаполнения = ЗаполнениеЗаявок(Объект.Дата);
	
	Для Каждого СтрЗап Из СтрокиЗаполнения Цикл
		Если СтрЗап.ЗаказаноОстаток > 0 Тогда
			СтрДоб = Объект.Заказы.Добавить();
			СтрДоб.ДокументЗаявки = СтрЗап.Документ;
			СтрДоб.Контрагент = СтрЗап.Контрагенты;
			СтрДоб.ПунктРазгрузки = СтрЗап.ПунктыРазгрузки;
			СтрДоб.Номенклатура = СтрЗап.Номенклатура;
			СтрДоб.СпособПодбора = СтрЗап.СпособПодбора;
			СтрДоб.КоличествоЗаказа = СтрЗап.ЗаказаноОстаток;
			СтрДоб.КоличествоОтгрузки = СтрЗап.ЗаказаноОстаток;
			СтрДоб.ВключатьВОтгрузку = Истина;
		КонецЕсли;
	КонецЦикла;
	Объект.Заказы.Сортировать("Контрагент, ПунктРазгрузки");

КонецПроцедуры

&НаСервере
Процедура СоздатьНакладныеНаСервере()
	ТЗ = Новый ТаблицаЗначений;
	ТЗ = Объект.Отгрузки.Выгрузить();
	ТЗ.Сортировать("Контрагент Возр, ПунктРазгрузки Возр");
	Контр = "";
	ПунктР = "";
	
	Для Каждого СтрокаТЗ Из ТЗ Цикл 
		Если СтрокаТЗ.Контрагент <> Контр  ИЛИ СтрокаТЗ.ПунктРазгрузки <> ПунктР Тогда
			ДокументНакладная = Документы.Накладная;
			НоваяНакладная = ДокументНакладная.СоздатьДокумент();
			НоваяНакладная.Дата = Объект.Дата;
			НоваяНакладная.Получатель = СтрокаТЗ.Контрагент;
			НоваяНакладная.ПунктПогрузки = НСтр("ru='Дрогичинский р-н, д. Завершье'");
			НоваяНакладная.ПунктРазгрузки = СтрокаТЗ.ПунктРазгрузки;
			НоваяНакладная.ЗаказчикАвтомобильнойПеревозки = СтрокаТЗ.Контрагент;
			НоваяНакладная.ОтпускРазрешил = Константы.ОтпускРазрешил.Получить();
			НоваяНакладная.ОтпускПроизвел = Константы.ГрузСдал.Получить();
			НоваяНакладная.ДоверенностьВыдал = СтрокаТЗ.Контрагент;
			Контр = СтрокаТЗ.Контрагент;
			ПунктР = СтрокаТЗ.ПунктРазгрузки;
		КонецЕсли;
		СтрокаНакладной = НоваяНакладная.Товары.Добавить();
		СтрокаНакладной.Номенклатура = СтрокаТЗ.Номенклатура;
		ИнфоПрайс = ПолучитьИнформациюИзПрайса(СтрокаНакладной.Номенклатура, Объект.Дата);
		СтрокаНакладной.ОптоваяНадбавка = -(ПолучитИнформациюОСкидке(СтрокаТЗ.Контрагент, СтрокаНакладной.Номенклатура, Объект.Дата));
		СтрокаНакладной.СтавкаНДС = ИнфоПрайс.СтавкаНДС;
		СтрокаНакладной.ЦенаПервогоПоставщика = ИнфоПрайс.Цена;
		СтрокаНакладной.Количество = СтрокаТЗ.Количество;
		СтрокаНакладной.ВидТары = СтрокаТЗ.Номенклатура.ВидТары;
		СтрокаНакладной.Мест = СтрокаТЗ.Номенклатура.КоличествоВОдномГрузовомМесте;
		СтрокаНакладной.НомерПартии = СтрокаТЗ.НомерПартии;
		СтрокаНакладной.ДатаВыпускаПартии = СтрокаТЗ.ДатаВыпуска;
		
		СтрокаНакладной.Цена = СтрокаНакладной.ЦенаПервогоПоставщика*(1+(СтрокаНакладной.ОптоваяНадбавка/100));
		СтрокаНакладной.Сумма = СтрокаНакладной.Цена*СтрокаНакладной.Количество;
		Если Не ПустаяСтрока(СтрокаНакладной.СтавкаНДС) Тогда
			СтрокаНакладной.НДС = СтрокаНакладной.Сумма*(ПолучитьСтавкуНДС(СтрокаНакладной.СтавкаНДС)/100);
		Иначе 
			СтрокаНакладной.НДС = 0;
		КонецЕсли;
		Если ПолучитьКГМ(СтрокаНакладной.Номенклатура) <> 0 Тогда
			СтрокаНакладной.Мест = СтрокаНакладной.Количество/ПолучитьКГМ(СтрокаНакладной.Номенклатура);
		КонецЕсли;
		СтрокаНакладной.Вес = СтрокаНакладной.Количество*ПолучитьВесЕдиницы(СтрокаНакладной.Номенклатура);
		СтрокаНакладной.Всего = СтрокаНакладной.Сумма + СтрокаНакладной.НДС;
		Если Не ПустаяСтрока(СтрокаНакладной.ДатаВыпускаПартии) Тогда
			СтрокаНакладной.ДатаГодности = ДобавитьМесяц(СтрокаНакладной.ДатаВыпускаПартии, ПолучитьСрокГодности(СтрокаНакладной.Номенклатура));
		КонецЕсли;		
		НоваяНакладная.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНакладные(Команда)
	СоздатьНакладныеНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьУНП(Контр)
	Возврат Контр.УНП;
КонецФункции

&НаСервере
Процедура ЗаполнитьЭлементМассива(Знач Массив, Знач СтрокаЗаявки, Знач СтрОст, Вариант)
	
	Перем ЭлементМассива;
	
	ЭлементМассива  = Новый Структура("ДокументЗаявки, Контрагент, ПунктРазгрузки, Номенклатура, ДатаВыпуска, НомерПартии, Количество, Склад");
	ЭлементМассива.ДокументЗаявки = СтрокаЗаявки.ДокументЗаявки;
	ЭлементМассива.Контрагент = СтрокаЗаявки.Контрагенты;
	ЭлементМассива.ПунктРазгрузки = СтрокаЗаявки.ПунктыРазгрузки;
	ЭлементМассива.Номенклатура = СтрокаЗаявки.Номенклатура;
	ЭлементМассива.ДатаВыпуска = СтрОст.ДатаВыпуска;
	ЭлементМассива.НомерПартии = СтрОст.НомерПартии;
	ЭлементМассива.Склад = СтрОст.Склад;
	Если Вариант = 1 Тогда
		ЭлементМассива.Количество = СтрокаЗаявки.Остаток;
	Иначе
		ЭлементМассива.Количество = СтрОст.Остаток;
	КонецЕсли;
	Массив.Добавить(ЭлементМассива);
	
КонецПроцедуры

&НаСервере
Функция ПроверкаСкладов(Номенклатура, ДатаОтгрузки, КоличествоОтгрузки, НомерПартии, ДатаВыпускаПартии)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиОстатки.Склад КАК Склад,
	|	ОстаткиОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиОстатки.НомерПартии КАК НомерПартии,
	|	ОстаткиОстатки.ДатаВыпуска КАК ДатаВыпуска
	|ИЗ
	|	РегистрНакопления.Остатки.Остатки(&ДатаОтгрузки, ) КАК ОстаткиОстатки
	|ГДЕ
	|	ОстаткиОстатки.Номенклатура = &Номенклатура
	|	И ОстаткиОстатки.Склад <> &Арбитраж
	|	И ОстаткиОстатки.НомерПартии = &НомерПартии
	|	И ОстаткиОстатки.ДатаВыпуска = &ДатаВыпускаПартии";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ДатаОтгрузки", ДатаОтгрузки);
	Запрос.УстановитьПараметр("НомерПартии", НомерПартии);
	Запрос.УстановитьПараметр("ДатаВыпускаПартии", ДатаВыпускаПартии);
	Запрос.УстановитьПараметр("Арбитраж", Справочники.Склад.Арбитраж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество()=0 Тогда 
		Возврат 0;
	КонецЕсли;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если КоличествоОтгрузки > ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда
			Возврат 1;
		Иначе 
			Возврат 2;
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Для Каждого ТекущаяСтрокаОтгрузка Из Объект.Отгрузки Цикл
		ВЗ = "2";
		ВЗ = ПроверкаСкладов(ТекущаяСтрокаОтгрузка.Номенклатура, Объект.Дата, ТекущаяСтрокаОтгрузка.Количество, ТекущаяСтрокаОтгрузка.НомерПартии, ТекущаяСтрокаОтгрузка.ДатаВыпуска);
		Если ВЗ = 0 Тогда 
			ТекстСообщения = СтрШаблон(НСтр("ru='Ни на одном из складов не обнаружено %1'"), ТекущаяСтрокаОтгрузка.Номенклатура);
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект), ТекстСообщения);
		ИначеЕсли ВЗ = 1 Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='На складе недостаточное продукции  %1'"), ТекущаяСтрокаОтгрузка.Номенклатура);
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект), ТекстСообщения);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(ДополнительныеПараметры) Экспорт
	
	ВременнаяПеременная = 1; // Сюда надо что-то написать, потому что процедура не может быть пустой, но она должна быть, без нее не работает

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.Дата = КонецДня(ТекущаяДатаСеанса());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонецДняДатыДокумента(Команда)
	Объект.Дата = КонецДня(Объект.Дата);
КонецПроцедуры

&НаСервере
Функция ПолучитьСрокГодности(Номенклатура)
	Номенклатура.ПолучитьОбъект();
	Возврат Номенклатура.СрокГодности;
КонецФункции

&НаСервере
Функция ПолучитьВесЕдиницы(Номенклатура)
	Номенклатура.ПолучитьОбъект();
	Возврат Номенклатура.ВесЕдиницы;
КонецФункции

&НаСервере
Функция ПолучитьКГМ(Номенклатура)
	Номенклатура.ПолучитьОбъект();
	Возврат Номенклатура.КоличествоВОдномГрузовомМесте;
КонецФункции

&НаСервере
Функция ПолучитьСтавкуНДС(СтавкаНДС)
	СтавкаНДС.ПолучитьОбъект();
	Возврат СтавкаНДС.Значение;
КонецФункции

&НаСервере
Функция ПолучитИнформациюОСкидке(Контрагент, Номенклатура, ДатаСреза)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СкидкиСрезПоследних.Контрагент КАК Контрагент,
	|	СкидкиСрезПоследних.Номенклатура КАК Номенклатура,
	|	СкидкиСрезПоследних.Скидка КАК Скидка
	|ИЗ
	|	РегистрСведений.Скидки.СрезПоследних(&ДатаСреза, ) КАК СкидкиСрезПоследних
	|ГДЕ
	|	СкидкиСрезПоследних.Контрагент = &Контрагент
	|	И СкидкиСрезПоследних.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Скидка;
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции

&НаСервере
Функция ПолучитьИнформациюИзПрайса(Номенклатура, ДатаСреза)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрейскурантСрезПоследних.Номенклатура КАК Номенклатура,
	|	ПрейскурантСрезПоследних.НДС КАК НДС,
	|	ПрейскурантСрезПоследних.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.Прейскурант.СрезПоследних(&ДатаСреза, ) КАК ПрейскурантСрезПоследних
	|ГДЕ
	|	ПрейскурантСрезПоследних.Номенклатура = &Номенклатура
	|	И ПрейскурантСрезПоследних.Цена <> 0";
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ИнфоПрайс = Новый Структура;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ИнфоПрайс.Вставить("Цена", ВыборкаДетальныеЗаписи.Цена);
		ИнфоПрайс.Вставить("СтавкаНДС", ВыборкаДетальныеЗаписи.НДС);
	КонецЦикла;
	Если ИнфоПрайс.Количество()=0 Тогда
		ИнфоПрайс.Вставить("Цена", 0);
		ИнфоПрайс.Вставить("СтавкаНДС", Справочники.СтавкиНДС);
	КонецЕсли;
	Возврат ИнфоПрайс;
КонецФункции

#КонецОбласти 











