#Область ПрограммныйИнтерфейс

// Автоматическое заполнение поля автор в создаваемых документах
//
// Параметры:
//  Источник				- ДокументОбъект
//	ДанныеЗаполнения		- Структура
//	ТекстЗаполнения			- Строка
//  СтандартнаяОбработка 	- Булево
//
Процедура АвторствоОбработкаЗаполнения(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	Источник.Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

// Отображение поля Автор для разных групп пользователей
//
// Параметры:
// Источник					- ДокументМенеджер
// ВидФормы					- Строка
// Параметры				- Структура
// ВыбраннаяФорма			- Форма
// ДополнительнаяИнформация	- Структура
// СтандартнаяОбработка		- Булево
Процедура ВидимостьАвтораОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	Если ВидФормы = "ФормаСписка" Тогда
		Привет = 1;
	ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
		Привет = 1;
	КонецЕсли
КонецПроцедуры

// Выводит сообщение о запрете редактирования документа
//
// Возвращаемое значение:
//   Строка   - Текст сообщение о запрете редактирования документа
//
Функция ТекстСообщенияДатыБлокировки() Экспорт
	Возврат СтрШаблон(НСтр("ru = 'Дата документа, меньше даты запрета редактирования %1. Такие манипуляции запрещены.'"), Строка(Константы.ДатаЗапретаРедактирования.Получить()));
КонецФункции

// Проверка даты блокировки редактирования перед записью
//
// Параметры:
//  Источник  - ДокументОбъект
//  Отказ  - Булево
//	РежимЗаписи - РежимЗаписиДокумента
//	РежимПроведения - РежимПроведенияДокумента
//
Процедура ДатаБлокировкиПередЗаписьюПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли; 
	Если Константы.ЗапретРедактированияПоДате.Получить() И Константы.ДатаЗапретаРедактирования.Получить() >= Источник.Дата Тогда
		Отказ = Истина;
		СообщениеОбОтказе = Новый СообщениеПользователю;
		СообщениеОбОтказе.Текст = ТекстСообщенияДатыБлокировки();
		СообщениеОбОтказе.Сообщить();
	КонецЕсли;
КонецПроцедуры

// Проверка даты блокировки редактирования перед удалением проведения
//
// Параметры:
//  Источник  - ДокументОбъект
//  Отказ  - Булево
//
Процедура ДатаБлокировкиПометкаУдаленияОбработкаУдаленияПроведения(Источник, Отказ) Экспорт
	Если Константы.ЗапретРедактированияПоДате.Получить() И Константы.ДатаЗапретаРедактирования.Получить() >= Источник.Дата Тогда
		Отказ = Истина;
		СообщениеОбОтказе = Новый СообщениеПользователю;
		СообщениеОбОтказе.Текст = ТекстСообщенияДатыБлокировки();
		СообщениеОбОтказе.Сообщить();
	КонецЕсли;
КонецПроцедуры

// Проверка даты блокировки редактирования перед удалением
//
// Параметры:
//  Источник  - ДокументОбъект
//  Отказ  - Булево
Процедура ДатаБлокировкиУдаленияПередУдалением(Источник, Отказ) Экспорт
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли; 
	Если Константы.ЗапретРедактированияПоДате.Получить() И Константы.ДатаЗапретаРедактирования.Получить() >= Источник.Дата Тогда
		Отказ = Истина;
		СообщениеОбОтказе = Новый СообщениеПользователю;
		СообщениеОбОтказе.Текст = ТекстСообщенияДатыБлокировки();
		СообщениеОбОтказе.Сообщить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

