
#Область СлужебныеПроцедурыИФункции

Функция ВыпускиПродукции(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	ИмяМетода = Запрос.ПараметрыURL.Получить("ИмяМетода");
	Если ИмяМетода <> "Period" Тогда 
		Ответ = Новый HTTPСервисОтвет(400);
		Возврат Ответ;
	Иначе 
		ДатаНачала = НачалоДня(Дата(Запрос.ПараметрыЗапроса.Получить("dn")));
		ДатаОкончания = КонецДня(Дата(Запрос.ПараметрыЗапроса.Получить("dk")));
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Производство.ДатаРозлива <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Производство.ДатаРозлива
	|		ИНАЧЕ Производство.Дата
	|	КОНЕЦ КАК ДатаДокумента,
	|	Производство.ВидПродукции.Наименование КАК ВидПродукцииНаименование,
	|	Производство.СкладСписанияСырья.КодВ77 КАК СкладСписанияСырьяКодВ77,
	|	СУММА(ПроизводствоЭтапыПроизводства.КоличествоВыпуска) КАК КоличествоВыпуска,
	|	Производство.ВидПродукции.ВидНоменклатуры КАК ВидПродукцииВидНоменклатуры,
	|	Производство.Номер КАК Номер,
	|	Производство.ПризнакИзменения КАК ПризнакИзменения,
	|	Производство.Автор.Наименование КАК Ответсвенный
	|ИЗ
	|	Документ.Производство.ЭтапыПроизводства КАК ПроизводствоЭтапыПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Производство КАК Производство
	|		ПО ПроизводствоЭтапыПроизводства.Ссылка = Производство.Ссылка
	|ГДЕ
	|	Производство.Проведен = ИСТИНА
	|	И Производство.Дата >= &ДатаНачала
	|	И Производство.Дата <= &ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	Производство.ВидПродукции.Наименование,
	|	Производство.ФактическиВыпущено,
	|	Производство.СкладСписанияСырья.КодВ77,
	|	ВЫБОР
	|		КОГДА Производство.ДатаРозлива <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Производство.ДатаРозлива
	|		ИНАЧЕ Производство.Дата
	|	КОНЕЦ,
	|	Производство.ВидПродукции.ВидНоменклатуры,
	|	Производство.Номер,
	|	Производство.ПризнакИзменения,
	|	Производство.Автор.Наименование";
	
	Запрос.Параметры.Вставить("ДатаНачала", ДатаНачала);
	Запрос.Параметры.Вставить("ДатаОкончания", ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МойXML = Новый ЗаписьXML;
	МойXML.УстановитьСтроку(); 
	ПараметрыЗаписиXML = Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина);
	МойXML.ЗаписатьОбъявлениеXML();
	
	ТипВсеДокументы = ФабрикаXDTO.Тип("http://www.sample-package.org","СписокПроизводство");
	ВсеДокументы = ФабрикаXDTO.Создать(ТипВсеДокументы);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТипОдинДокумент = ФабрикаXDTO.Тип("http://www.sample-package.org","ДокументПроизводства");
		ОдинДокумент = ФабрикаXDTO.Создать(ТипОдинДокумент);
		ЗаполнитьЗначенияСвойств(ОдинДокумент, ВыборкаДетальныеЗаписи,,"ВидПродукцииВидНоменклатуры");
		ОдинДокумент.ВидПродукцииВидНоменклатуры = Строка(ВыборкаДетальныеЗаписи.ВидПродукцииВидНоменклатуры);
		ВсеДокументы.ДокументПроизводства.Добавить(ОдинДокумент);
	КонецЦикла;
	ФабрикаXDTO.ЗаписатьXML(МойXML, ВсеДокументы);
	СтрокаОтвета =  МойXML.Закрыть();
	
	Ответ.УстановитьТелоИзСтроки(СтрокаОтвета, "UTF-8");
	Ответ.Заголовки.Вставить("Content-Type", "application/xml");
	Возврат Ответ;
КонецФункции

Функция ВнутренниеПеремещения(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	ИмяМетода = Запрос.ПараметрыURL.Получить("ИмяМетода");
	Если ИмяМетода <> "Period" Тогда 
		Ответ = Новый HTTPСервисОтвет(400);
		Возврат Ответ;
	Иначе 
		ДатаНачала = НачалоДня(Дата(Запрос.ПараметрыЗапроса.Получить("dn")));
		ДатаОкончания = КонецДня(Дата(Запрос.ПараметрыЗапроса.Получить("dk")));
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВнутреннееПеремещениеПродукцияИСырье.Ссылка.Номер КАК НомерДокумента,
	|	ВнутреннееПеремещениеПродукцияИСырье.Ссылка.Дата КАК ДатаДокумента,
	|	ВнутреннееПеремещениеПродукцияИСырье.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	ВнутреннееПеремещениеПродукцияИСырье.Номенклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатуры,
	|	ВнутреннееПеремещениеПродукцияИСырье.Количество КАК Количество,
	|	ВнутреннееПеремещение.СкладОтправитель.КодВ77 КАК СкладОтправительКодВ77,
	|	ВнутреннееПеремещение.СкладПолучатель.КодВ77 КАК СкладПолучательКодВ77
	|ИЗ
	|	Документ.ВнутреннееПеремещение.ПродукцияИСырье КАК ВнутреннееПеремещениеПродукцияИСырье
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПеремещение КАК ВнутреннееПеремещение
	|		ПО ВнутреннееПеремещениеПродукцияИСырье.Ссылка = ВнутреннееПеремещение.Ссылка
	|ГДЕ
	|	ВнутреннееПеремещение.Дата >= &ДатаНачала
	|	И ВнутреннееПеремещение.Дата <= &ДатаОкончания
	|	И ВнутреннееПеремещение.Проведен = ИСТИНА";
	
	Запрос.Параметры.Вставить("ДатаНачала", ДатаНачала);
	Запрос.Параметры.Вставить("ДатаОкончания", ДатаОкончания);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МойXML = Новый ЗаписьXML;
	МойXML.УстановитьСтроку(); 
	ПараметрыЗаписиXML = Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина);
	МойXML.ЗаписатьОбъявлениеXML();
	
	ТипВсеДокументы = ФабрикаXDTO.Тип("http://www.sample-package.org","СписокПеремещения");
	ВсеДокументы = ФабрикаXDTO.Создать(ТипВсеДокументы);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТипОдинДокумент = ФабрикаXDTO.Тип("http://www.sample-package.org","ДокументПеремещения");
		ОдинДокумент = ФабрикаXDTO.Создать(ТипОдинДокумент);
		ЗаполнитьЗначенияСвойств(ОдинДокумент, ВыборкаДетальныеЗаписи,,"НоменклатураВидНоменклатуры");
		ОдинДокумент.НоменклатураВидНоменклатуры = Строка(ВыборкаДетальныеЗаписи.НоменклатураВидНоменклатуры);
		ВсеДокументы.ДокументПеремещения.Добавить(ОдинДокумент);
	КонецЦикла;
	ФабрикаXDTO.ЗаписатьXML(МойXML, ВсеДокументы);
	СтрокаОтвета =  МойXML.Закрыть();
	
	Ответ.УстановитьТелоИзСтроки(СтрокаОтвета, "UTF-8");
	Ответ.Заголовки.Вставить("Content-Type", "application/xml");
	Возврат Ответ;
КонецФункции

Функция Трудозатраты(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	ИмяМетода = Запрос.ПараметрыURL.Получить("ИмяМетода");
	Если ИмяМетода <> "Period" Тогда 
		Ответ = Новый HTTPСервисОтвет(400);
		Возврат Ответ;
	Иначе 
		ДатаНачала = НачалоДня(Дата(Запрос.ПараметрыЗапроса.Получить("dn")));
		ДатаОкончания = КонецДня(Дата(Запрос.ПараметрыЗапроса.Получить("dk")));
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетТрудозатрат.Ссылка КАК Ссылка,
		|	СУММА(УчетТрудозатратУчетЗатрат.ИтогоПоВиду) КАК Время,
		|	УчетТрудозатратУчетЗатрат.ВидТрудозатрат.Наименование КАК ВидТрудозатрат
		|ИЗ
		|	Документ.УчетТрудозатрат.УчетЗатрат КАК УчетТрудозатратУчетЗатрат
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УчетТрудозатрат КАК УчетТрудозатрат
		|		ПО УчетТрудозатратУчетЗатрат.Ссылка = УчетТрудозатрат.Ссылка
		|ГДЕ
		|	УчетТрудозатрат.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И УчетТрудозатрат.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	УчетТрудозатрат.Ссылка,
		|	УчетТрудозатратУчетЗатрат.ВидТрудозатрат.Наименование";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Ложь", Ложь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МойXML = Новый ЗаписьXML;
	МойXML.УстановитьСтроку(); 
	ПараметрыЗаписиXML = Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина);
	МойXML.ЗаписатьОбъявлениеXML();
	
	ТипВсеДокументы = ФабрикаXDTO.Тип("http://www.sample-package.org","СписокТрудозатраты");
	ВсеДокументы = ФабрикаXDTO.Создать(ТипВсеДокументы);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТипОдинДокумент = ФабрикаXDTO.Тип("http://www.sample-package.org","ДокументТрудозатрат");
		ОдинДокумент = ФабрикаXDTO.Создать(ТипОдинДокумент);
		ЗаполнитьЗначенияСвойств(ОдинДокумент, ВыборкаДетальныеЗаписи);
		ВсеДокументы.ДокументТрудозатрат.Добавить(ОдинДокумент);
	КонецЦикла;
	ФабрикаXDTO.ЗаписатьXML(МойXML, ВсеДокументы);
	СтрокаОтвета =  МойXML.Закрыть();
	
	Ответ.УстановитьТелоИзСтроки(СтрокаОтвета, "UTF-8");
	Ответ.Заголовки.Вставить("Content-Type", "application/xml");
	Возврат Ответ;
КонецФункции

Функция Списание(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	ИмяМетода = Запрос.ПараметрыURL.Получить("ИмяМетода");
	Если ИмяМетода <> "Period" Тогда 
		Ответ = Новый HTTPСервисОтвет(400);
		Возврат Ответ;
	Иначе 
		ДатаНачала = НачалоДня(Дата(Запрос.ПараметрыЗапроса.Получить("dn")));
		ДатаОкончания = КонецДня(Дата(Запрос.ПараметрыЗапроса.Получить("dk")));
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Списание.Дата КАК ДатаДокумента,
		|	Списание.Склад.КодВ77 КАК Склад,
		|	СписаниеПробы.НаименованиеПроб.Наименование КАК Наименование,
		|	СписаниеПробы.НомерПартии КАК НомерПартии,
		|	СписаниеПробы.ВесПробы КАК Количество,
		|	СписаниеПробы.ЦельИсследования.Наименование КАК ЦельИсследования,
		|	Списание.Номер КАК НомерДокумента
		|ИЗ
		|	Документ.Списание.Пробы КАК СписаниеПробы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Списание КАК Списание
		|		ПО СписаниеПробы.Ссылка = Списание.Ссылка
		|ГДЕ
		|	Списание.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Списание.Проведен = ИСТИНА";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МойXML = Новый ЗаписьXML;
	МойXML.УстановитьСтроку(); 
	ПараметрыЗаписиXML = Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина);
	МойXML.ЗаписатьОбъявлениеXML();
	
	ТипВсеДокументы = ФабрикаXDTO.Тип("http://www.sample-package.org","СписокСписания");
	ВсеДокументы = ФабрикаXDTO.Создать(ТипВсеДокументы);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТипОдинДокумент = ФабрикаXDTO.Тип("http://www.sample-package.org","ДокументСписания");
		ОдинДокумент = ФабрикаXDTO.Создать(ТипОдинДокумент);
		ЗаполнитьЗначенияСвойств(ОдинДокумент, ВыборкаДетальныеЗаписи);
		ВсеДокументы.ДокументСписания.Добавить(ОдинДокумент);
	КонецЦикла;
	ФабрикаXDTO.ЗаписатьXML(МойXML, ВсеДокументы);
	СтрокаОтвета =  МойXML.Закрыть();
	
	Ответ.УстановитьТелоИзСтроки(СтрокаОтвета, "UTF-8");
	Ответ.Заголовки.Вставить("Content-Type", "application/xml");
	Возврат Ответ;
КонецФункции

#КонецОбласти

