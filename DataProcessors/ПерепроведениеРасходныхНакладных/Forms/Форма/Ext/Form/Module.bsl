&НаСервере
Процедура ОбработкаНаСервере(ДатаНачала, ДатаОкончания)
	
	#Область УдалениеДокументовОтгрузки
	ЗапросУдаленияДокументов = Новый Запрос;
	ЗапросУдаленияДокументов.Текст = 
	"ВЫБРАТЬ
	|	Отгрузка.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.Отгрузка КАК Отгрузка
	|ГДЕ
	|	Отгрузка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	ЗапросУдаленияДокументов.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
	ЗапросУдаленияДокументов.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	
	РезультатЗапроса = ЗапросУдаленияДокументов.Выполнить();
	
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументНаУдаление = ВыборкаДетальныеЗаписи.Ссылка;
		ДокументНаУдаление.ПОлучитьОбъект().Удалить();
	КонецЦикла;
	#КонецОбласти
	
	#Область ВыборкаДатОтгрузок
	ЗапросСпискаДат = Новый Запрос;
	ЗапросСпискаДат.Текст = 
	"ВЫБРАТЬ
	|	Заявка.Дата КАК Дата
	|ИЗ
	|	Документ.Заявка КАК Заявка
	|ГДЕ
	|	Заявка.Проведен = &Истина
	|	И Заявка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявка.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	ЗапросСпискаДат.УстановитьПараметр("Истина", Истина);
	ЗапросСпискаДат.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
	ЗапросСпискаДат.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	РезультатЗапроса = ЗапросСпискаДат.Выполнить();
	СписокДатОтгрузок = РезультатЗапроса.Выбрать();
	#КонецОбласти
	
	#Область СозданиеДокументовОтгрузок
	Пока СписокДатОтгрузок.Следующий() Цикл
		#Область ЗаполнениеЗаявок
		ДокументРасхода = Документы.Отгрузка.СоздатьДокумент();
		ДокументРасхода.Дата = КонецДня(СписокДатОтгрузок.Дата);
		ДокументРасхода.Заказы.Очистить();
		
		ЗапросЗаявки = Новый Запрос;
		ЗапросЗаявки.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаОстатки.Контрагенты КАК Контрагенты,
		|	ЗаявкаОстатки.Номенклатура КАК Номенклатура,
		|	ЗаявкаОстатки.ПунктыРазгрузки КАК ПунктыРазгрузки,
		|	ЗаявкаОстатки.ЗаказаноОстаток КАК ЗаказаноОстаток,
		|	ЗаявкаОстатки.ДокументЗаявки КАК Документ,
		|	ЗаявкаОстатки.ДокументЗаявки.СпособПодбораПартии КАК СпособПодбора
		|ИЗ
		|	РегистрНакопления.Заявка.Остатки(&ДатаОтгрузки, ) КАК ЗаявкаОстатки
		|ГДЕ
		|	ЗаявкаОстатки.ЗаказаноОстаток > 0";
		
		ЗапросЗаявки.УстановитьПараметр("ДатаОтгрузки", КонецДня(СписокДатОтгрузок.Дата));
		
		СтрокиЗаполнения = ЗапросЗаявки.Выполнить().Выгрузить();
		Для Каждого СтрЗап Из СтрокиЗаполнения Цикл
			СтрДоб = ДокументРасхода.Заказы.Добавить();
			СтрДоб.ДокументЗаявки = СтрЗап.Документ;
			СтрДоб.Контрагент = СтрЗап.Контрагенты;
			СтрДоб.ПунктРазгрузки = СтрЗап.ПунктыРазгрузки;
			СтрДоб.Номенклатура = СтрЗап.Номенклатура;
			СтрДоб.СпособПодбора = СтрЗап.СпособПодбора;
			СтрДоб.КоличествоЗаказа = СтрЗап.ЗаказаноОстаток;
			СтрДоб.КоличествоОтгрузки = СтрЗап.ЗаказаноОстаток;
			СтрДоб.ВключатьВОтгрузку = Истина;
		КонецЦикла;
		ДокументРасхода.Заказы.Сортировать("Контрагент, ПунктРазгрузки");
		ДокументРасхода.Записать(РежимЗаписиДокумента.Запись);
		#КонецОбласти
		
		#Область ЗаполнениеОтгрузок
		ДокументРасхода.Отгрузки.Очистить();
		
		ЗапросОстатки = Новый Запрос;
		ЗапросОстатки.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиОстатки.Склад КАК Склад,
		|	ОстаткиОстатки.НомерПартии КАК НомерПартии,
		|	ОстаткиОстатки.КоличествоОстаток КАК Остаток,
		|	ОстаткиОстатки.ДатаВыпуска КАК ДатаВыпуска
		|ИЗ
		|	РегистрНакопления.Остатки.Остатки(&ДатаОтгрузки, ) КАК ОстаткиОстатки
		|ГДЕ
		|	ОстаткиОстатки.Склад.ТипСклада = &ТипСклада";
		
		ЗапросОстатки.УстановитьПараметр("ДатаОтгрузки", ДокументРасхода.Дата);
		ЗапросОстатки.УстановитьПараметр("ТипСклада", Перечисления.ТипСклада.Продукция);
		
		ТЗОстатки = ЗапросОстатки.Выполнить().Выгрузить();
		ТЗОстатки.Колонки.Добавить("Отгрузить");
		ТЗОстатки.ЗаполнитьЗначения(0, "Отгрузить");
		
		
		ЗапросПотребности = Новый Запрос;
		ЗапросПотребности.Текст = 
		"ВЫБРАТЬ
		|	ОтгрузкаЗаказы.ДокументЗаявки КАК ДокументЗаявки,
		|	ОтгрузкаЗаказы.Контрагент КАК Контрагенты,
		|	ОтгрузкаЗаказы.ПунктРазгрузки КАК ПунктыРазгрузки,
		|	ОтгрузкаЗаказы.Номенклатура КАК Номенклатура,
		|	ОтгрузкаЗаказы.КоличествоЗаказа КАК КоличествоЗаказа,
		|	ОтгрузкаЗаказы.КоличествоОтгрузки КАК Остаток,
		|	ОтгрузкаЗаказы.ВключатьВОтгрузку КАК ВключатьВОтгрузку,
		|	ОтгрузкаЗаказы.Ссылка КАК Ссылка,
		|	ОтгрузкаЗаказы.ДокументЗаявки.СпособПодбораПартии КАК СпособПодбора
		|ИЗ
		|	Документ.Отгрузка.Заказы КАК ОтгрузкаЗаказы
		|ГДЕ
		|	ОтгрузкаЗаказы.ВключатьВОтгрузку = 1
		|	И ОтгрузкаЗаказы.Ссылка = &ДокЗап";
		
		ЗапросПотребности.УстановитьПараметр("ДокЗап", ДокументРасхода.Ссылка);
		
		ТЗЗаявки = ЗапросПотребности.Выполнить().Выгрузить();
		ТЗЗаявки.Колонки.Добавить("НомерПартии");
		ТЗЗаявки.ЗаполнитьЗначения("", "НомерПартии");
		ТЗЗаявки.Колонки.Добавить("Отгрузить");
		ТЗЗаявки.ЗаполнитьЗначения(0, "Отгрузить");
		
		ТЗЗаявки.Сортировать("СпособПодбора Убыв, Остаток Убыв");
		ТЗОстатки.Сортировать("ДатаВыпуска Возр,  Остаток Возр");
		
		Массив = Новый Массив();
		
		Для Каждого СтрокаЗаявки Из ТЗЗаявки Цикл
			СтатусОтгрузки = "";
			Для Каждого СтрОст Из ТЗОстатки Цикл
				Если СтрокаЗаявки.СпособПодбора = ПредопределенноеЗначение("Перечисление.СпособПодбора.Целиком") Тогда
					Если СтатусОтгрузки = "" Тогда
						СтатусОтгрузки = "НетОстатка";
					КонецЕсли;
					Если СтрокаЗаявки.Номенклатура = СтрОст.Номенклатура И  СтрОст.Остаток > 0 Тогда
						СтатусОтгрузки = "НетПартии";
						Если СтрокаЗаявки.Остаток <= СтрОст.Остаток Тогда
							ЗаполнитьЭлементМассива(Массив, СтрокаЗаявки, СтрОст, 1);
							ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток = ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток - СтрокаЗаявки.Остаток;
							СтатусОтгрузки = "Полностью";
							Прервать;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если СтатусОтгрузки = "" Тогда
						СтатусОтгрузки = "НетОстатка";
					КонецЕсли;
					Если СтрокаЗаявки.Номенклатура = СтрОст.Номенклатура Тогда
						Если СтрокаЗаявки.Остаток <= СтрОст.Остаток Тогда
							ЗаполнитьЭлементМассива(Массив, СтрокаЗаявки, СтрОст, 1);
							ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток = ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток - СтрокаЗаявки.Остаток;
							Если СтатусОтгрузки = "" ИЛИ СтатусОтгрузки = "НетОстатка" Тогда
								СтатусОтгрузки = "Полностью";
							КонецЕсли;
							Прервать;
						ИначеЕсли СтрокаЗаявки.Остаток > СтрОст.Остаток И СтрОст.Остаток > 0 Тогда
							ЗаполнитьЭлементМассива(Массив, СтрокаЗаявки, СтрОст, 2);
							СтрокаЗаявки.Остаток = СтрокаЗаявки.Остаток - ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток;
							ТЗОстатки[ТЗОстатки.Индекс(СтрОст)].Остаток = 0;
							СтатусОтгрузки = "Части";
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если СтатусОтгрузки = "НетОстатка" Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон(НСтр("ru='%1 для %2 %3 нету на остатке. По документу %4'"), Строка(СтрокаЗаявки.Номенклатура), Строка(СтрокаЗаявки.Контрагенты), Строка(СтрокаЗаявки.ПунктыРазгрузки), Строка(ДокументРасхода));
				Сообщение.Сообщить(); 
			КонецЕсли;
		КонецЦикла;
		
		СтрокиЗаполнения = Массив;
		
		Для Каждого СтрЗап Из СтрокиЗаполнения Цикл
			Если СтрЗап.Количество > 0 Тогда
				
				СтрДоб = ДокументРасхода.Отгрузки.Добавить();
				СтрДоб.ДокументЗаявки = СтрЗап.ДокументЗаявки;
				СтрДоб.Контрагент = СтрЗап.Контрагент;
				СтрДоб.ПунктРазгрузки = СтрЗап.ПунктРазгрузки;
				СтрДоб.ДатаВыпуска = СтрЗап.ДатаВыпуска;
				СтрДоб.Номенклатура = СтрЗап.Номенклатура;
				СтрДоб.НомерПартии = СтрЗап.НомерПартии;
				СтрДоб.Склад = СтрЗап.Склад;
				СтрДоб.Количество = СтрЗап.Количество;
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = Строка(СтрЗап.Контрагенты) + " " + Строка(СтрЗап.ПунктыРазгрузки) + " с " + Строка(СтрЗап.Номенклатура) + " " + НСтр("ru='исключен из отгрузки'");
				Сообщение.Поле = "";
				Сообщение.УстановитьДанные(СтрЗап.Контрагенты);
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЦикла;
		ДокументРасхода.Отгрузки.Сортировать("Контрагент, ПунктРазгрузки");
		ДокументРасхода.Записать(РежимЗаписиДокумента.Проведение);
		
		#КонецОбласти
		
	КонецЦикла;
	#КонецОбласти
	
	
КонецПроцедуры

&НаКлиенте
Процедура Перепровести(Команда)
	ОбработкаНаСервере(Объект.ДатаНачала, Объект.ДатаОкончания);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлементМассива(Знач Массив, Знач СтрокаЗаявки, Знач СтрОст, Вариант)
	
	Перем ЭлементМассива;
	
	ЭлементМассива  = Новый Структура("ДокументЗаявки, Контрагент, ПунктРазгрузки, Номенклатура, ДатаВыпуска, НомерПартии, Количество, Склад");
	ЭлементМассива.ДокументЗаявки = СтрокаЗаявки.ДокументЗаявки;
	ЭлементМассива.Контрагент = СтрокаЗаявки.Контрагенты;
	ЭлементМассива.ПунктРазгрузки = СтрокаЗаявки.ПунктыРазгрузки;
	ЭлементМассива.Номенклатура = СтрокаЗаявки.Номенклатура;
	ЭлементМассива.ДатаВыпуска = СтрОст.ДатаВыпуска;
	ЭлементМассива.НомерПартии = СтрОст.НомерПартии;
	ЭлементМассива.Склад = СтрОст.Склад;
	Если Вариант = 1 Тогда
		ЭлементМассива.Количество = СтрокаЗаявки.Остаток;
	Иначе
		ЭлементМассива.Количество = СтрОст.Остаток;
	КонецЕсли;
	Массив.Добавить(ЭлементМассива);
	
КонецПроцедуры
